{"version":3,"sources":["router/routes.ts","pages/PageOne/PageOne.tsx","pages/PageTwo.tsx","layout/SiderMenu.tsx","layout/BaseHeader.tsx","layout/BaseLayout.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["routes","path","component","props","console","log","useEffect","title","meta","Sider","Layout","LogoWrapper","styled","div","SiderMenu","useHistory","location","push","useState","curMenu","setCurMenu","some","item","pathname","style","backgroundColor","onClick","value","key","theme","mode","selectedKeys","map","Item","Header","GithubOutlinedWrapper","GithubOutlined","HeaderWrapper","BaseHeader","window","open","Content","ContentWrapper","BaseLayout","height","message","description","type","showIcon","to","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oTAGA,I,EAiBeA,EAjBA,CACb,CACEC,KAAM,YACNC,UCFW,SAAiBC,GAK9B,OAJAC,QAAQC,IAAI,QAASF,GACrBG,qBAAU,WACRF,QAAQC,IAAI,YACX,IAED,cAAC,IAAD,CAAME,MAAM,2BAAZ,SACE,cAAC,IAAD,ODJFC,KAAM,CACJD,MAAO,mCAGX,CACEN,KAAM,YACNC,UEXW,WAIb,OAHAI,qBAAU,WACRF,QAAQC,IAAI,WACX,IACI,2CFQLG,KAAM,CACJD,MAAO,oCGVLE,EAAUC,IAAVD,MACFE,EAAcC,IAAOC,IAAV,6KASF,SAASC,IAAa,IAAD,EACPC,cAAnBC,EAD0B,EAC1BA,SAAUC,EADgB,EAChBA,KADgB,EAEJC,mBAAiB,IAFb,mBAE3BC,EAF2B,KAElBC,EAFkB,KAGlCd,qBAAU,WACJN,EAAOqB,MAAK,SAAAC,GAAI,OAAIA,EAAKrB,OAASe,EAASO,aAC7CH,EAAWJ,EAASO,YAErB,CAACP,IAKJ,OACE,eAACP,EAAD,CAAOe,MAAO,CAAEC,gBAAiB,SAAjC,UACE,cAACd,EAAD,gCACA,cAAC,IAAD,CAAMe,QAPU,SAACC,GACnBV,EAAKU,EAAMC,KACXR,EAAWO,EAAMC,MAKaC,MAAM,QAAQC,KAAK,SAASC,aAAc,CAACZ,GAAvE,SACGnB,EAAOgC,KAAI,SAAAV,GAAI,OACd,cAAC,IAAKW,KAAN,UAA4BX,EAAKd,KAAKD,OAAtBe,EAAKrB,c,mBC7BvBiC,EAAWxB,IAAXwB,OACFC,EAAwBvB,YAAOwB,IAAPxB,CAAH,oEAIrByB,EAAgBzB,YAAOsB,EAAPtB,CAAH,gIAcJ0B,EARI,WACjB,OACE,cAACD,EAAD,UACE,cAACF,EAAD,CAAuBT,QAAS,kBAAMa,OAAOC,KAAK,0CCVhDC,EAAY/B,IAAZ+B,QACFC,EAAiB9B,YAAO6B,EAAP7B,CAAH,8CAuBL+B,EApBI,WACjB,OACE,eAAC,IAAD,CAAQnB,MAAO,CAAEoB,OAAQ,QAAzB,UACE,cAAC9B,EAAD,IACA,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC4B,EAAD,WACE,cAAC,IAAD,CAAOG,QAAQ,2BAAOC,YAAY,iLAAgCC,KAAK,OAAOC,UAAQ,IACtF,eAAC,IAAD,WACGhD,EAAOgC,KAAI,SAAAV,GAAI,OACd,cAAC,IAAD,CAAuBrB,KAAMqB,EAAKrB,KAAMC,UAAWoB,EAAKpB,WAA5CoB,EAAKrB,SAEnB,cAAC,IAAD,CAAUgD,GAAI,CAAE1B,SAAUvB,EAAO,GAAGC,qB,QCTjCiD,MAVf,WACE,OACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOjD,KAAK,IAAIC,UAAWyC,SCMpBQ,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0541b02d.chunk.js","sourcesContent":["import PageOne from '../pages/PageOne/PageOne'\nimport PageTwo from '../pages/PageTwo'\n\nconst routes = [\n  {\n    path: '/page-one',\n    component: PageOne,\n    meta: {\n      title: '示例页面一',\n    },\n  },\n  {\n    path: '/page-two',\n    component: PageTwo,\n    meta: {\n      title: '示例页面二',\n    },\n  },\n]\n\nexport default routes\n","import { Button, Card, Col, Row } from 'antd'\nimport { useEffect, useState } from 'react'\nimport { RouterProps } from 'react-router-dom'\n\nexport default function PageOne(props: RouterProps) {\n  console.log('props', props)\n  useEffect(() => {\n    console.log('effect')\n  }, [])\n  return (\n    <Card title='功能展示'>\n      <Row></Row>\n    </Card>\n  )\n}\n","import { useEffect } from 'react'\n\nexport default function PageTwo() {\n  useEffect(() => {\n    console.log('12312')\n  }, [])\n  return <div>pagetwo</div>\n}\n","import { useEffect, useState } from 'react'\nimport { Layout, Menu } from 'antd'\nimport styled from 'styled-components'\nimport routes from '../router/routes'\nimport { useHistory } from 'react-router-dom'\nconst { Sider } = Layout\nconst LogoWrapper = styled.div`\n  font-size: 22px;\n  width: 100%;\n  height: 64px;\n  background-color: #1890ff;\n  color: white;\n  text-align: center;\n  line-height: 64px;\n`\nexport default function SiderMenu() {\n  const { location, push } = useHistory()\n  const [curMenu, setCurMenu] = useState<string>('')\n  useEffect(() => {\n    if (routes.some(item => item.path === location.pathname)) {\n      setCurMenu(location.pathname)\n    }\n  }, [location])\n  const handleClick = (value: { key: string }) => {\n    push(value.key)\n    setCurMenu(value.key)\n  }\n  return (\n    <Sider style={{ backgroundColor: 'white' }}>\n      <LogoWrapper>mitojs-react-demo</LogoWrapper>\n      <Menu onClick={handleClick} theme='light' mode='inline' selectedKeys={[curMenu]}>\n        {routes.map(item => (\n          <Menu.Item key={item.path}>{item.meta.title}</Menu.Item>\n        ))}\n      </Menu>\n    </Sider>\n  )\n}\n","import { Layout } from 'antd'\nimport { GithubOutlined } from '@ant-design/icons'\nimport styled from 'styled-components'\nconst { Header } = Layout\nconst GithubOutlinedWrapper = styled(GithubOutlined)`\n  font-size: 22px;\n  cursor: pointer;\n`\nconst HeaderWrapper = styled(Header)`\n  background-color: white;\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`\nconst BaseHeader = () => {\n  return (\n    <HeaderWrapper>\n      <GithubOutlinedWrapper onClick={() => window.open('https://github.com/mitojs/mitojs')} />\n    </HeaderWrapper>\n  )\n}\n\nexport default BaseHeader\n","import { Redirect, Route, Switch } from 'react-router-dom'\nimport { Alert, Layout } from 'antd'\nimport SiderMenu from './SiderMenu'\nimport BaseHeader from './BaseHeader'\nimport routes from '../router/routes'\nimport styled from 'styled-components'\n\nconst { Content } = Layout\nconst ContentWrapper = styled(Content)`\n  padding: 10px;\n`\nconst BaseLayout = () => {\n  return (\n    <Layout style={{ height: '100%' }}>\n      <SiderMenu />\n      <Layout>\n        <BaseHeader />\n        <ContentWrapper>\n          <Alert message='提示信息' description='右边页面会实时打印的你操作行为，控制台会打印当前收集的信息' type='info' showIcon />\n          <Switch>\n            {routes.map(item => (\n              <Route key={item.path} path={item.path} component={item.component}></Route>\n            ))}\n            <Redirect to={{ pathname: routes[0].path }}></Redirect>\n          </Switch>\n        </ContentWrapper>\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default BaseLayout\n","import './App.css'\nimport BaseLayout from './layout/BaseLayout'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path='/' component={BaseLayout}></Route>\n      </Switch>\n    </BrowserRouter>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}